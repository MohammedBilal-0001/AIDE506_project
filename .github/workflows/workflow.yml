name: Deploy to Koyeb

on:
  push:
    branches: [ main ]  # Adjust branch name as needed

env:
  LOWER_OWNER: mohammedbilal-0001

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: ./frontend  # Adjust path as needed
          push: true
          tags: ghcr.io/${{ env.LOWER_OWNER }}/frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push backend1 image
        uses: docker/build-push-action@v4
        with:
          context: ./backend1  # Adjust path as needed
          push: true
          tags: ghcr.io/${{ env.LOWER_OWNER }}/backend1:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build and push backend2 image
        uses: docker/build-push-action@v4
        with:
          context: ./backend2  # Adjust path as needed
          push: true
          tags: ghcr.io/${{ env.LOWER_OWNER }}/backend2:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Make images public
        run: |
          # Use GitHub API to make the packages public
          # Note: This requires a PAT with appropriate permissions
          for pkg in frontend backend1 backend2; do
            curl -X PATCH \
              -H "Accept: application/vnd.github.v3+json" \
              -H "Authorization: token ${{ secrets.PACKAGE_PAT }}" \
              https://api.github.com/user/packages/container/$pkg/visibility \
              -d '{"visibility":"public"}'
          done

  deploy-to-koyeb:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Install and configure the Koyeb CLI
        uses: koyeb-community/koyeb-actions@v2
        with:
          api_token: ${{ secrets.KOYEB_TOKEN }}
      
      - name: Explicitly login to Koyeb
        run: koyeb login --token ${{ secrets.KOYEB_TOKEN }}
          
      - name: Verify image accessibility
        run: |
          # Use curl to check image existence without pulling
          echo "Checking frontend image..."
          curl -s -f -L -I https://ghcr.io/v2/${{ env.LOWER_OWNER }}/frontend/manifests/latest || echo "Frontend image not accessible"
          
          echo "Checking backend1 image..."
          curl -s -f -L -I https://ghcr.io/v2/${{ env.LOWER_OWNER }}/backend1/manifests/latest || echo "Backend1 image not accessible"
          
          echo "Checking backend2 image..."
          curl -s -f -L -I https://ghcr.io/v2/${{ env.LOWER_OWNER }}/backend2/manifests/latest || echo "Backend2 image not accessible"
          
      - name: Deploy to Koyeb
        run: |
          # First check if service exists
          if koyeb service get aide-project &>/dev/null; then
            echo "Service exists, redeploying..."
            koyeb service redeploy aide-project
          else
            echo "Creating new service..."
            koyeb service create aide-project \
              --docker ghcr.io/${{ env.LOWER_OWNER }}/backend1:latest \
              --docker ghcr.io/${{ env.LOWER_OWNER }}/backend2:latest \
              --docker ghcr.io/${{ env.LOWER_OWNER }}/frontend:latest \
              --ports "3000:http,5001:http,5002:http" \
              --routes "/frontend:3000,/backend1:5001,/backend2:5002" \
              --regions fra \
              --env "NODE_ENV=production" \
              --env "FLASK_ENV=production" \
              --env "REACT_APP_BACKEND1_URL=/backend1" \
              --env "REACT_APP_BACKEND2_URL=/backend2" \
              --min-scale 0 \
              --max-scale 1
          fi
        
      - name: Verify deployment
        run: |
          echo "Waiting for deployment to complete..."
          sleep 30
          koyeb service get aide-project
