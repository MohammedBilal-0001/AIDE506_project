name: Build and Deploy

on:
  push:
    branches: [main]
  workflow_dispatch:

env:
  LOWER_OWNER: "mohammedbilal-0001"  # Hardcoded lowercase to avoid pipe issues

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Backend 1
        uses: docker/build-push-action@v5
        with:
          context: ./Backend_1
          file: ./Backend_1/Dockerfile.backend1
          push: true
          tags: |
            ghcr.io/${{ env.LOWER_OWNER }}/backend1:latest
            ghcr.io/${{ env.LOWER_OWNER }}/backend1:${{ github.sha }}

      - name: Build and push Backend 2 (with DagsHub auth)
        uses: docker/build-push-action@v5
        with:
          context: ./Backend_2
          file: ./Backend_2/Dockerfile.backend2
          push: true
          secrets: |
            DAGSHUB_TOKEN=${{ secrets.DAGSHUB_TOKEN }}
          tags: |
            ghcr.io/${{ env.LOWER_OWNER }}/backend2:latest
            ghcr.io/${{ env.LOWER_OWNER }}/backend2:${{ github.sha }}

      - name: Build and push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          file: ./frontend/Dockerfile.frontend
          push: true
          tags: |
            ghcr.io/${{ env.LOWER_OWNER }}/frontend:latest
            ghcr.io/${{ env.LOWER_OWNER }}/frontend:${{ github.sha }}

  deploy-to-koyeb:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Install Koyeb CLI
        run: |
          curl -s https://cli.koyeb.com/install | sh
          echo "$HOME/.koyeb/bin" >> $GITHUB_PATH
          
      - name: Deploy to Koyeb
        run: |
          koyeb service create aide-project \
            --docker ghcr.io/${{ env.LOWER_OWNER }}/backend1:latest \
            --docker ghcr.io/${{ env.LOWER_OWNER }}/backend2:latest \
            --docker ghcr.io/${{ env.LOWER_OWNER }}/frontend:latest \
            --ports "3000:http,5001:http,5002:http" \
            --regions fra \
            --env "NODE_ENV=production" \
            --env "FLASK_ENV=production" \
            --env "REACT_APP_BACKEND1_URL=https://backend1" \
            --env "REACT_APP_BACKEND2_URL=https://backend2" \
            --scaling "auto:0-1" \
            --token ${{ secrets.KOYEB_TOKEN }}
