name: Build and Deploy

on:
  push:
    branches: [main]

env:
  LOWER_OWNER: "mohammedbilal-0001"

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    strategy:
      matrix:
        include:
          - name: backend1
            context: ./Backend_1
            secrets: ''
          - name: backend2
            context: ./Backend_2
            secrets: 'DAGSHUB_TOKEN=${{ secrets.DAGSHUB_TOKEN }}'
          - name: frontend
            context: ./frontend
            secrets: ''

    steps:
      - uses: actions/checkout@v4

      - name: Docker Login
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build & Push ${{ matrix.name }}
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.context }}
          tags: ghcr.io/${{ env.LOWER_OWNER }}/${{ matrix.name }}:latest
          secrets: ${{ matrix.secrets }}

  deploy-to-koyeb:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: koyeb-community/koyeb-actions@v2
        with:
          api_token: ${{ secrets.KOYEB_TOKEN }}

      - name: Deploy Service
        run: |
          koyeb service create aide-project \
            --docker ghcr.io/${{ env.LOWER_OWNER }}/backend1:latest \
            --docker ghcr.io/${{ env.LOWER_OWNER }}/backend2:latest \
            --docker ghcr.io/${{ env.LOWER_OWNER }}/frontend:latest \
            --ports "3000:http,5001:http,5002:http" \
            --routes "/frontend:3000,/backend1:5001,/backend2:5002" \
            --regions fra \
            --env "NODE_ENV=production" \
            --env "FLASK_ENV=production" \
            --env "REACT_APP_BACKEND1_URL=/backend1" \
            --env "REACT_APP_BACKEND2_URL=/backend2" \
            --min-scale 0 \
            --max-scale 1 \
            -y
